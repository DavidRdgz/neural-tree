base::source("/Users/galois/Workspace/github/neural-tree/tree.R")
d <- read.csv("nt_train.csv")
head(d)
nrow(d)
dd <- read.csv("nt_test.csv")
nrow(dd)
t <- Tree()
t$grow(list(list("None", 0, d)), .5)
tmp <- d[ , !apply(d==0,2,all)]
t <- Tree()
t$grow(list(list("None", 0, tmp)), .5)
ncol(tmp)
ncol(d)
head(tmp)
table(tmp$l)
n <- nnet(l ~ ., data = tmp, size = 2)
tmp2 <- dd[ , !apply(dd==0,2,all)]
n.pred <- predict(n, tmp2[,!names(tmp2) %in% c("l")])
n.pred <- predict(n, tmp2[,!names(tmp2) %in% c("l")], type = "class")
table(n.pred, {actu <- tmp2$l})
actu <,- tmp2$l
actu <- tmp2$l
table(n.pred, actu)
pr <- prcomp(d,scale = TRUE)
pr <- prcomp(d[, ,scale = TRUE)
    d <- read.csv("nt_train.csv")
    dd <- read.csv("nt_test.csv")
    d <- d[ , !apply(d==0,2,all)]
    dd <- dd[ , !apply(dd==0,2,all)]
    x.train <- d[, !names(d) %in% c("l")]
    pr.d <- prcom(x.train, scale = TRUE)
    pr.d <- prcomp(x.train, scale = TRUE)
    x.train <- predict(pr.d, x.train)
    d <- cbind(x.train, d$l)
    x.test <- dd[, !names(dd) %in% c("l")]
    x.test <- predict(pr.d, x.test)
head(d)
ncol(d)
colnames(d)
    d <- read.csv("nt_train.csv")
    dd <- read.csv("nt_test.csv")
    d <- d[ , !apply(d==0,2,all)]
    dd <- dd[ , !apply(dd==0,2,all)]
table(d$l)
    x.train <- d[, !names(d) %in% c("l")]
    x.test <- dd[, !names(dd) %in% c("l")]
    pr.d <- prcomp(x.train, scale = TRUE)
    x.train <- predict(pr.d, x.train)
    x.test <- predict(pr.d, x.test)
    d <- cbind(x.train,"l"= d$l)
colnames(d)
    d <- read.csv("nt_train.csv")
    dd <- read.csv("nt_test.csv")
    d <- d[ , !apply(d==0,2,all)]
    dd <- dd[ , !apply(dd==0,2,all)]
    x.train <- d[, !names(d) %in% c("l")]
    x.test <- dd[, !names(dd) %in% c("l")]
    pr.d <- prcomp(x.train, scale = TRUE)
    x.train <- predict(pr.d, x.train)
    x.test <- predict(pr.d, x.test)
    d <- cbind(x.train,"l"= d$l)
    dd <- cbind(x.test,"l" =dd$l)
    n <- nnet(l ~ ., data = d, size = 2)
    pred <- predict(n, dd[, !names(dd) %in% c("l")])
    actu <- dd$l
head(d)
head(dd)
    pred <- predict(n, dd[, !names(dd) %in% c("l")])
colnames(dd)
colnames(d) == colnames(dd)
    n <- nnet(l ~ ., data = d, size = 2)
    pred <- predict(n, dd[, !names(dd) %in% c("l")])
    actu <- dd$l
    x.test <- predict(pr.d, x.test)
    d <- read.csv("nt_train.csv")
    dd <- read.csv("nt_test.csv")
    d <- d[ , !apply(d==0,2,all)]
    dd <- dd[ , !apply(dd==0,2,all)]
    x.train <- d[, !names(d) %in% c("l")]
    x.test <- dd[, !names(dd) %in% c("l")]
    pr.d <- prcomp(x.train, scale = TRUE)
    x.train <- predict(pr.d, x.train)
    x.test <- predict(pr.d, x.test)
    d <- cbind(x.train,"l"= d$l)
    dd <- cbind(x.test,"l" =dd$l)
    n <- nnet(l ~ ., data = d, size = 2)
    pred <- predict(n, dd[, !names(dd) %in% c("l")])
table(dd$l)
head(dd)
dd[,"l"]
table(dd[,"l"])
class(d)
class(dd)
    dd <- as.data.frame(dd)
    pred <- predict(n, dd[, !names(dd) %in% c("l")])
    actu <- dd$l
    table(pred, actu)
table(d$l)
    d <- cbind(as.data.frame(x.train),"l"= d$l)
    d <- read.csv("nt_train.csv")
    dd <- read.csv("nt_test.csv")
    d <- d[ , !apply(d==0,2,all)]
    dd <- dd[ , !apply(dd==0,2,all)]
    x.train <- d[, !names(d) %in% c("l")]
    x.test <- dd[, !names(dd) %in% c("l")]
    pr.d <- prcomp(x.train, scale = TRUE)
    x.train <- predict(pr.d, x.train)
    x.test <- predict(pr.d, x.test)
    d <- cbind(as.data.frame(x.train),"l"= d$l)
class(d)
head(d)
    d <- cbind(as.data.frame(x.train),"l"= d$l)
    dd <- cbind(as.data.frame(x.test),"l" =dd$l)
    n <- nnet(l ~ ., data = d, size = 2)
    dd <- as.data.frame(dd)
    pred <- predict(n, dd[, !names(dd) %in% c("l")])
    actu <- dd$l
    table(pred, actu)
    pred <- predict(n, dd[, !names(dd) %in% c("l")])
    actu <- dd$l
    table(pred, actu)
    d <- cbind(as.data.frame(x.train),"l"= d$l)
    dd <- cbind(as.data.frame(x.test),"l" =dd$l)
    n <- nnet(l ~ ., data = d, size = 2)
    pred <- predict(n, dd[, !names(dd) %in% c("l")])
    actu <- dd$l
    table(pred, actu)
table(pred)
    pred <- predict(n, dd[, !names(dd) %in% c("l")], type = "class")
    actu <- dd$l
    table(pred, actu)
summary(pr.d)
    df <- d
    t <- Tree()
    t$grow(list(list("None",0, df)), cut.off)
    t$grow(list(list("None",0, df)), .5)
    pred <- t$predict.nt(df[,!names(df) %in% c("l")])
    actu <- df$l
    table(pred,actu)
sink("nt_gestures", append=TRUE, split=FALSE)
    table(pred,actu)
    df2 <- dd
    pred2 <- t$predict.nt(df2[,!names(df2) %in% c("l")])
    actu2 <- df2$l
    table(pred2,actu2)
sink()
t$peek()
t$labels()
t$get.labels()
t$get.leaves()
t$get.parent(1)
t$get.parent(2)
t$get.parent(2)$id
t$get.parent(3)$id
t$get.parent(4)$id
t$get.parent(5)$id
t$get.parent(6)$id
t$get.parent(7)$id
t$get.parent(8)$id
t$get.parent(9)$id
t$get.parent(10)$id
t$get.leaves()
t$get.labels()
t$get.parent(10)$id
t$get.parent(11)$id
t$get.parent(12)$id
    rf.fit <- randomForest(l ~ ., data = df)
library(randomForest)
    rf.fit <- randomForest(l ~ ., data = df)
    rf.pred <- predict(rf.fit, 
)
    rf.pred <- predict(rf.fit, df2[, !names(df2) %in% c("l")])
head(rf.pred)
    rf.pred <- predict(rf.fit, df2[, !names(df2) %in% c("l")], type="class")
    rf.actu <- df2$l
    table(rf.pred, rf.actu)
sink("rf.accuracy")
    table(rf.pred, rf.actu)
sink()
rf.score <- table(rf.pred,rf.actu)
ntree.score <- pred2,actu2)
ntree.score <- table(pred2,actu2)
rf.score
ntree.score
sum(diag(rf.score))/sum(rf.score)
sum(diag(ntree.score))/sum(ntree.score)
library(rpart)
    rpart.fit <- rpart(l ~ ., data = df, method = "class")
    plot(rpart.fit, uniform = TRUE)
    text(rpart.fit, use.n=TRUE, all=TRUE, cex=.8)
    plot(rpart.fit, uniform = TRUE)
    text(rpart.fit, use.n=TRUE,  cex=.8)
nrow(dd)
nrow(d)
print("hello", 234)
?print
print(list("hello",123))
print(c("hello",123))
q()
